swagger: "2.0"
info:
  version: "0.0.1"
  title: Terminarz
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /:
    x-swagger-router-controller: homepage
    get:
      operationId: homepage
      produces:
        - text/html; charset=utf-8
      responses:
        200:
          description: Success
          schema:
            type: string
  /material.css:
    x-swagger-router-controller: homepage
    get:
      operationId: material_css
      produces:
        - text/css; charset=utf-8
      responses:
        200:
          description: Success
          schema:
            type: string
  /templates/{name}:
    x-swagger-router-controller: homepage
    get:
      operationId: templates
      parameters:
        - name: name
          type: string
          in: path
          required: true
      produces:
        - text/html; charset=utf-8
      responses:
        200:
          description: Success
          schema:
            type: string
  /libs/{folder}/{name}:
    x-swagger-router-controller: homepage
    get:
      operationId: libs
      parameters:
        - name: folder
          type: string
          in: path
          required: true
        - name: name
          type: string
          in: path
          required: true
      produces:
        - text/javascript; charset=utf-8
      responses:
        200:
          description: Success
          schema:
            type: string
  /events:
      x-swagger-router-controller: event
      get:
        operationId: readEvents
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/EventListResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
      post:
        operationId: createEvent
        parameters:
          - name: event
            in: body
            required: true
            schema:
              $ref: "#/definitions/Event"
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/EventResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /events/{id}:
      x-swagger-router-controller: event
      get:
        operationId: readEvent
        parameters:
          - name: id
            type: string
            in: path
            required: true
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/EventResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
      put:
        operationId: updateEvent
        parameters:
          - name: id
            type: string
            in: path
            required: true
          - name: event
            in: body
            required: true
            schema:
              $ref: "#/definitions/Event"
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/EventResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
      delete:
        operationId: deleteEvent
        parameters:
          - name: id
            type: string
            in: path
            required: true
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/EventResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /users:
      x-swagger-router-controller: user
      get:
        operationId: readUsers
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/UserListResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
      post:
        operationId: createUser
        parameters:
          - name: user
            in: body
            required: true
            schema:
              $ref: "#/definitions/User"
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/UserResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
      delete:
        operationId: logout
        responses:
          "200":
            description: Success
            schema:
              type: string
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /users/{id}:
      x-swagger-router-controller: user
      get:
        operationId: readUser
        parameters:
          - name: id
            type: string
            in: path
            required: true
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/UserResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
      put:
        operationId: updateUser
        parameters:
          - name: id
            type: string
            in: path
            required: true
          - name: user
            in: body
            required: true
            schema:
              $ref: "#/definitions/User"
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/UserResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
      delete:
        operationId: deleteUser
        parameters:
          - name: id
            type: string
            in: path
            required: true
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/UserResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  EventResponse:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      startDateTime:
        type: string
        format: date-time
      endDateTime:
        type: string
        format: date-time
  EventListResponse:
    properties:
      events:
        type: array
        items:
          $ref: "#/definitions/EventResponse"
  Event:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      startDateTime:
        type: string
        format: date-time
      endDateTime:
        type: string
        format: date-time
  UserResponse:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      password:
        type: string
  UserListResponse:
    properties:
      users:
        type: array
        items:
          $ref: "#/definitions/UserResponse"
  User:
    type: object
    properties:
      name:
        type: string
      password:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
